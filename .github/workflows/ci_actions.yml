name: GitHub Actions CI
on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch: # on command
jobs:
  CI-Actions:
    runs-on: [self-hosted, linux]
    # getting python distribution ready
    container: python:3.9.7
    steps:
      - name: Some first prints 
        run: | 
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "Python version is"
          python -V
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # setting up dependencies cache for pip install
      - name: Install dependencies
        run: |
          echo "Installing dependencies"
          pip install flake8 pytest pytest-cov coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip freeze 
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      ### need to test this 
      - name: Run Black (Code Formatting)
        run: |
          black --check .
        continue-on-error: false

      - name: Run Mypy (Type Checking)
        run: |
          mypy .
        continue-on-error: false

      - name: Run Bandit (Security Checks)
        run: |
          bandit -r .
        continue-on-error: false
        
      - name: Test with pytest
        run: |
          PYTHONPATH=. pytest --cov=lib_{{cookiecutter.project_name}} tests --cov-fail-under=20
          coverage xml -i
      - name: publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: result.xml
          comment_mode: always
      
